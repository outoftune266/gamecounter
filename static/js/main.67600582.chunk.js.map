{"version":3,"sources":["components/Header/header.js","components/Gamelisting/gamelisting.js","components/Footer/footer.js","pages/Homepage/homepage.js","components/Playercard/playercard.js","pages/Phase10/phase10.js","App.js","reportWebVitals.js","index.js"],"names":["Header","class","Gamelisting","to","type","Footer","Homepage","Playercard","player","changeName","advancePhase","updateScore","id","onClick","name","phase","score","Phase10Game","useState","playerCount","setPlayerCount","players","setPlayers","playerList","setPlayerList","updateStates","playerlist","transformedList","map","console","log","target","playerID","playerName","prompt","i","length","points","Number","push","App","className","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAYeA,MAVf,WACE,OACE,qBAAKC,MAAM,+BAAX,SACE,qBAAKA,MAAM,kBAAX,SACE,sBAAMA,MAAM,uBAAZ,oCCcOC,MAjBf,WACE,OACE,8BACE,qBAAKD,MAAM,+BAAX,SACE,sBAAKA,MAAM,kBAAX,UACE,sBAAMA,MAAM,uBAAZ,mCACA,cAAC,IAAD,CAAME,GAAG,WAAT,SACE,wBAAQC,KAAK,SAASH,MAAM,kBAA5B,6BCEGI,MAVf,WACE,OACE,wBAAQJ,MAAM,+BAAd,SACE,qBAAKA,MAAM,kBAAX,SACE,sBAAMA,MAAM,uBAAZ,yCCSOK,MAVf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,QCqBSC,MA7Bf,YAAwE,IAAlDC,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,YACtD,OACE,sBAAKV,MAAM,+BAAX,UACE,sBAAKA,MAAM,kBAAX,UACE,sBAAMW,GAAIJ,EAAOI,GAAIX,MAAM,uBAAuBY,QAASJ,EAA3D,SACGD,EAAOM,OAEV,yBACEF,GAAIJ,EAAOI,GACXR,KAAK,SACLH,MAAM,kBACNY,QAASH,EAJX,mBAMQ,+BAAOF,EAAOO,WAEtB,yBACEH,GAAIJ,EAAOI,GACXR,KAAK,SACLH,MAAM,kBACNY,QAASF,EAJX,oBAMS,+BAAOH,EAAOQ,cAGzB,qBAAKf,MAAM,wBCsEFgB,MA5Ff,WACE,MAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEA,EAAoCJ,qBAApC,mBAAOK,EAAP,KAAmBC,EAAnB,KAEA,SAASC,EAAaC,GACpB,IAAIC,EAAkBD,EAAWE,KAAI,SAACpB,GAAD,OACnC,cAAC,EAAD,CACEA,OAAQA,EACRC,WAAYA,EACZC,aAAcA,EACdC,YAAaA,OAGjBa,EAAcG,GACdE,QAAQC,IAAIJ,GACZJ,EAAWI,GACXG,QAAQC,IAAIT,GAGd,SAASZ,EAAWsB,GAClBF,QAAQC,IAAIC,EAAOA,OAAOnB,IAI1B,IAHA,IAAIoB,EAAWD,EAAOA,OAAOnB,GACzBqB,EAAaC,OAAO,+BACpBR,EAAaL,EACRc,EAAI,EAAGA,EAAId,EAAQe,OAAQD,IAClC,GAAIT,EAAWS,GAAGvB,IAAMoB,EAAU,CAChCN,EAAWS,GAAGrB,KAAOmB,EACrBR,EAAaC,GACb,OAKN,SAAShB,EAAaqB,GACpBF,QAAQC,IAAIC,EAAOA,OAAOnB,IAG1B,IAFA,IAAIoB,EAAWD,EAAOA,OAAOnB,GACzBc,EAAaL,EACRc,EAAI,EAAGA,EAAId,EAAQe,OAAQD,IAClC,GAAIT,EAAWS,GAAGvB,IAAMoB,EAAU,CAChCN,EAAWS,GAAGpB,OAAS,EACvBU,EAAaC,GACb,OAKN,SAASf,EAAYoB,GAInB,IAHA,IAAIC,EAAWD,EAAOA,OAAOnB,GACzBc,EAAaL,EACbgB,EAASC,OAAOJ,OAAO,oCAClBC,EAAI,EAAGA,EAAId,EAAQe,OAAQD,IAClC,GAAIT,EAAWS,GAAGvB,IAAMoB,EAAU,CAChCN,EAAWS,GAAGnB,OAASqB,EACvBZ,EAAaC,GACb,OAoBN,OACE,gCACE,qBAAKzB,MAAM,+BAAX,SACE,sBAAKA,MAAM,kBAAX,UACE,sBAAMA,MAAM,uBAAZ,sBACA,wBAAQG,KAAK,SAASH,MAAM,kBAAkBY,QApBtD,WACEO,EAAeD,EAAc,GAC7BU,QAAQC,IAAIX,GACZ,IAAIO,EAAaL,EAEjBK,EAAWa,KAAK,CACd3B,GAAIO,EACJL,KAAM,UAAYK,EAClBJ,MAAO,EACPC,MAAO,IAGTS,EAAaC,IAQP,4BAKHH,EACD,cAAC,EAAD,QCrESiB,MAjBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,cCFGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.67600582.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <nav class=\"navbar navbar-light bg-light\">\n      <div class=\"container-fluid\">\n        <span class=\"navbar-brand mb-0 h1\">Card Game Counter</span>\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Gamelisting() {\n  return (\n    <div>\n      <nav class=\"navbar navbar-light bg-light\">\n        <div class=\"container-fluid\">\n          <span class=\"navbar-brand mb-0 h1\">Phase 10: 2-6 players</span>\n          <Link to=\"/phase10\">\n            <button type=\"button\" class=\"btn btn-success\">\n              Play!\n            </button>\n          </Link>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default Gamelisting;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <footer class=\"navbar navbar-light bg-light\">\n      <div class=\"container-fluid\">\n        <span class=\"navbar-brand mb-0 h1\"> &copy; Zak Monnet, 2021</span>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport Header from \"../../components/Header/header\";\nimport Gamelisting from \"../../components/Gamelisting/gamelisting\";\nimport Footer from \"../../components/Footer/footer\";\n\nfunction Homepage() {\n  return (\n    <div>\n      <Header></Header>\n      <Gamelisting></Gamelisting>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default Homepage;\n","import React from \"react\";\n\nfunction Playercard({ player, changeName, advancePhase, updateScore }) {\n  return (\n    <nav class=\"navbar navbar-light bg-light\">\n      <div class=\"container-fluid\">\n        <span id={player.id} class=\"navbar-brand mb-0 h1\" onClick={changeName}>\n          {player.name}\n        </span>\n        <button\n          id={player.id}\n          type=\"button\"\n          class=\"btn btn-primary\"\n          onClick={advancePhase}\n        >\n          Phase <span>{player.phase}</span>\n        </button>\n        <button\n          id={player.id}\n          type=\"button\"\n          class=\"btn btn-primary\"\n          onClick={updateScore}\n        >\n          Score: <span>{player.score}</span>\n        </button>\n      </div>\n      <div class=\"container-fluid\"></div>\n    </nav>\n  );\n}\n\nexport default Playercard;\n","import React, { useState } from \"react\";\nimport Playercard from \"../../components/Playercard/playercard\";\nimport Footer from \"../../components/Footer/footer\";\n\nfunction Phase10Game() {\n  const [playerCount, setPlayerCount] = useState(1);\n  const [players, setPlayers] = useState([]);\n  //let playerCount = 0;\n  const [playerList, setPlayerList] = useState();\n\n  function updateStates(playerlist) {\n    let transformedList = playerlist.map((player) => (\n      <Playercard\n        player={player}\n        changeName={changeName}\n        advancePhase={advancePhase}\n        updateScore={updateScore}\n      />\n    ));\n    setPlayerList(transformedList);\n    console.log(playerlist);\n    setPlayers(playerlist);\n    console.log(players);\n  }\n\n  function changeName(target) {\n    console.log(target.target.id);\n    let playerID = target.target.id;\n    let playerName = prompt(\"What is this player's name?\");\n    let playerlist = players;\n    for (let i = 0; i < players.length; i++) {\n      if (playerlist[i].id == playerID) {\n        playerlist[i].name = playerName;\n        updateStates(playerlist);\n        break;\n      }\n    }\n  }\n\n  function advancePhase(target) {\n    console.log(target.target.id);\n    let playerID = target.target.id;\n    let playerlist = players;\n    for (let i = 0; i < players.length; i++) {\n      if (playerlist[i].id == playerID) {\n        playerlist[i].phase += 1;\n        updateStates(playerlist);\n        break;\n      }\n    }\n  }\n\n  function updateScore(target) {\n    let playerID = target.target.id;\n    let playerlist = players;\n    let points = Number(prompt(\"How many points are you adding?\"));\n    for (let i = 0; i < players.length; i++) {\n      if (playerlist[i].id == playerID) {\n        playerlist[i].score += points;\n        updateStates(playerlist);\n        break;\n      }\n    }\n  }\n\n  function addPlayer() {\n    setPlayerCount(playerCount + 1);\n    console.log(playerCount);\n    let playerlist = players;\n\n    playerlist.push({\n      id: playerCount,\n      name: \"Player \" + playerCount,\n      phase: 1,\n      score: 0,\n    });\n\n    updateStates(playerlist);\n  }\n\n  return (\n    <div>\n      <nav class=\"navbar navbar-light bg-light\">\n        <div class=\"container-fluid\">\n          <span class=\"navbar-brand mb-0 h1\">Phase 10</span>\n          <button type=\"button\" class=\"btn btn-success\" onClick={addPlayer}>\n            + Players\n          </button>\n        </div>\n      </nav>\n      {playerList}\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default Phase10Game;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Homepage from \"./pages/Homepage/homepage\";\nimport Phase10Game from \"./pages/Phase10/phase10\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Homepage></Homepage>\n          </Route>\n          <Route exact path=\"/phase10\">\n            <Phase10Game></Phase10Game>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}